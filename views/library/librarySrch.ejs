<div class="board-container" style="max-width: 900px; margin: 40px auto; padding: 30px; background-color: #fff9f3; border-radius: 12px;">
  <h1 style="text-align: center; font-size: 2rem; margin-bottom: 20px;">도서관 상세 정보</h1>

<table id="libraryTable">
  <thead>
    <tr>
        <th style="padding: 12px; border-bottom: 2px solid #333; background-color: #f5eee4; text-align: left;">도서관</th>
        <th style="padding: 12px; border-bottom: 2px solid #333; background-color: #f5eee4; text-align: left;">전화번호</th>
        <th style="padding: 12px; border-bottom: 2px solid #333; background-color: #f5eee4; text-align: left;">도서관 주소</th>
        <th style="padding: 12px; border-bottom: 2px solid #333; background-color: #f5eee4; text-align: left;">웹사이트 링크</th>
      </tr>
  </thead>
  <tbody id="libraryBody">
    <!-- 도서관 목록 -->
  </tbody>
</table>

<div class="pagination">
  <button onclick="prevPage()">이전</button>
  <span id="pageInfo">1 페이지</span>
  <button onclick="nextPage()">다음</button>
</div>

<script>
let currentPage = 1;
const pageSize = 10;

async function fetchLibs(page = 1) {
  try {
    const res = await fetch('/library/api/list'); // ← 실제 API 엔드포인트
    const libraries = await res.json();

    const tbody = document.getElementById('libraryBody');
    tbody.innerHTML = ''; // 이전 내용 초기화

    libraries.slice((page - 1) * pageSize, page * pageSize).forEach(lib => {
      const tr = document.createElement('tr');

      const homepageButton = lib.homepage
        ? `<button onclick="window.open('${lib.homepage}', '_blank')">웹사이트 이동</button>`
        : '-';

      tr.innerHTML = `
        <td style="padding: 12px; border-bottom: 1px solid #ccc;">
          <a href="library_detail.html?name=${encodeURIComponent(lib.name)}">${lib.name}</a>
        </td>
        <td style="padding: 12px; border-bottom: 1px solid #ccc;">${lib.phone || '-'}</td>
        <td style="padding: 12px; border-bottom: 1px solid #ccc;">${lib.address}</td>
        <td style="padding: 12px; border-bottom: 1px solid #ccc;">${homepageButton}</td>
      `;

      tbody.appendChild(tr);
    });

    document.getElementById('pageInfo').textContent = `${page} 페이지`;
  } catch (err) {
    console.error('도서관 목록 불러오기 실패:', err);
  }
}

function nextPage() {
  currentPage++;
  fetchLibs(currentPage);
}

function prevPage() {
  if (currentPage > 1) {
    currentPage--;
    fetchLibs(currentPage);
  }
}

fetchLibs(currentPage);
</script>