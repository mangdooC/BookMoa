<% if (typeof error !== 'undefined') { %>
  <div class="flash-message" style="color: red; margin-bottom: 10px;">
    <%= error %>
  </div>
<% } %>
<style>
body {
  background: #F6ECDD;
  font-family: 'Inter', sans-serif;
}

.signup-wrapper {
  position: relative;
  width: 100%;
  max-width: 700px;
  margin: 0 auto;
  padding: 20px;
  background: white;
  border-radius: 15px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}


h1 {
  font-size: 32px;
  margin-bottom: 30px;
  margin-left: 20px;
}

.form-group {
  margin-bottom: 20px;
  margin-right: 10px;
  margin-left: 80px;
}

.form-group label {
  display: block;
  font-weight: bold;
  margin-bottom: 10px;
}

.form-group input {
  width: 80%;
  padding: 15px;
  border: 1px solid #000;
  border-radius: 20px;
  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);
}

.submit-btn {
  display: block;
  margin: 40px auto 0;
  width: 100px;
  height: 50px;
  background: #FFC1A9;
  border: 1px solid #000;
  border-radius: 15px;
  font-size: 15px;
  font-weight: bold;
}

.address-btn{
  display: block;
  margin: 40px auto 0;
  width: 70px;
  height: 30px;
  background: #FFC1A9;
  border: 1px solid #000;
  border-radius: 15px;
  font-size: 10px;
  font-weight: bold;
}

.address-wrapper {
  display: flex;
  gap: 10px; 
  align-items: center;
}

.address-wrapper input {
  flex: 1; 
  padding: 15px;
  border: 1px solid #000;
  border-radius: 20px;
  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);
}

.address-wrapper{
  width: 85%;
}

.address-wrapper .address-btn {
  margin: 0; 
  width: 70px;
  height: 50px;
  background: #FFC1A9;
  border: 1px solid #000;
  border-radius: 15px;
  font-size: 13px;
  font-weight: bold;
  white-space: nowrap;
}
</style>
        <div class="signup-wrapper">
        <h1>회원가입</h1>
          <form id="registerForm" action="/auth/register" method="POST">
            <div class="form-group">
              <label for="user_id">아이디</label>
              <input
                type="text"
                id="user_id"
                name="user_id"
                placeholder="아이디 (영어, 숫자만)"
                required
              />
              <br />
              <small id="user_id_error" style="color: red; display: none;">영어와 숫자만 입력 가능</small>
            </div>
            ...
            <button type="submit" class="submit-btn">가입하기</button>
          </form>
    </div>

<script src="https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>

<script>
  function openAddressSearch() {
    new daum.Postcode({
      oncomplete: function (data) {
        document.getElementById("address").value = data.roadAddress;
      },
    }).open();
  }

  const userIdInput = document.getElementById("user_id");
  const userIdError = document.getElementById("user_id_error");

  userIdInput.addEventListener("input", () => {
    const value = userIdInput.value;
    const valid = /^[a-zA-Z0-9]*$/.test(value);

    if (!valid) {
      userIdError.style.display = "block";
      userIdInput.value = value.replace(/[^a-zA-Z0-9]/g, "");
    } else {
      userIdError.style.display = "none";
    }
  });

  const form = document.getElementById("registerForm");

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    const user_id = form.user_id.value.trim();
    const password = form.password.value.trim();
    const nickname = form.nickname.value.trim();
    const address = form.address.value.trim();

    if (!user_id || !password || !nickname || !address) {
      alert("필수 입력란을 모두 채워주세요");
      return;
    }

    try {
      const res = await fetch("/auth/register", {
        method: "POST",
        credentials: "include",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ user_id, password, nickname, address }),
      });

      const data = await res.json();

      if (res.ok) {
        alert(data.message || "회원가입 성공!");
        window.location.href = "/";
      } else {
        alert("에러: " + (data.error || "알 수 없는 에러"));
      }
    } catch (err) {
      alert("서버 에러 발생");
      console.error(err);
    }
  });
</script>
